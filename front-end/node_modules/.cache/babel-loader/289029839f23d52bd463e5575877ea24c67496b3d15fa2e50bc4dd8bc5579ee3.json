{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { thunk } from 'redux-thunk';\nimport session from './session';\nimport restaurants from './restaurants';\nimport reservations from './reservations';\nimport reviews from './reviews';\nimport savedRestaurants from './savedRestaurants';\nconst rootReducer = combineReducers({\n  session,\n  restaurants,\n  reservations,\n  reviews,\n  savedRestaurants\n});\nlet enhancer;\nif (process.env.NODE_ENV === 'production') {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require('redux-logger').default;\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\nconst configureStore = preloadedState => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\nexport default configureStore;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","compose","thunk","session","restaurants","reservations","reviews","savedRestaurants","rootReducer","enhancer","process","env","NODE_ENV","logger","require","default","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","configureStore","preloadedState"],"sources":["/Users/akshashe/Documents/Projects/team-project-2024849-sprinters/front-end/src/store/index.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { thunk } from 'redux-thunk';\n\nimport session from './session';\nimport restaurants from './restaurants';\nimport reservations from './reservations';\nimport reviews from './reviews';\nimport savedRestaurants from './savedRestaurants'\n\nconst rootReducer = combineReducers({\n  session,\n  restaurants,\n  reservations,\n  reviews,\n  savedRestaurants\n});\n\n\nlet enhancer;\n\nif (process.env.NODE_ENV === 'production') {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require('redux-logger').default;\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = (preloadedState) => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\n\nexport default configureStore;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,EAAEC,OAAO,QAAQ,OAAO;AAC9E,SAASC,KAAK,QAAQ,aAAa;AAEnC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,gBAAgB,MAAM,oBAAoB;AAEjD,MAAMC,WAAW,GAAGT,eAAe,CAAC;EAClCI,OAAO;EACPC,WAAW;EACXC,YAAY;EACZC,OAAO;EACPC;AACF,CAAC,CAAC;AAGF,IAAIE,QAAQ;AAEZ,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzCH,QAAQ,GAAGT,eAAe,CAACE,KAAK,CAAC;AACnC,CAAC,MAAM;EACL,MAAMW,MAAM,GAAGC,OAAO,CAAC,cAAc,CAAC,CAACC,OAAO;EAC9C,MAAMC,gBAAgB,GACpBC,MAAM,CAACC,oCAAoC,IAAIjB,OAAO;EACxDQ,QAAQ,GAAGO,gBAAgB,CAAChB,eAAe,CAACE,KAAK,EAAEW,MAAM,CAAC,CAAC;AAC7D;AAEA,MAAMM,cAAc,GAAIC,cAAc,IAAK;EACzC,OAAOtB,WAAW,CAACU,WAAW,EAAEY,cAAc,EAAEX,QAAQ,CAAC;AAC3D,CAAC;AAED,eAAeU,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}