{"ast":null,"code":"import{csrfFetch}from\"./csrf\";/* ------------------------------------- Action Types ---------------------------------- */const LOAD_ALL_USER_RESERVATIONS='/reservations/LOAD_ALL_USER_RESERVATIONS';const LOAD_ONE_RESERVATION='/reservations/LOAD_ONE_RESERVATION';const ADD_RESERVATION='/reservations/ADD_RESERVATION';const UPDATE_RESERVATION='/reservations/UPDATE_RESERVATION';const DELETE_RESERVATION='/reservations/DELETE_RESERVATION';const RESET_RESERVATIONS='/reservations/RESET_RESERVATIONS';/* ------------------------------------ Action Creators --------------------------------- */const loadAllUserReservations=reservations=>{return{type:LOAD_ALL_USER_RESERVATIONS,reservations:reservations};};const loadOneReservation=reservation=>{return{type:LOAD_ONE_RESERVATION,reservation:reservation};};const addReservation=reservation=>{return{type:ADD_RESERVATION,reservation:reservation};};const updateReservation=reservation=>{return{type:UPDATE_RESERVATION,reservation:reservation};};const removeReservation=reservationId=>{return{type:DELETE_RESERVATION,reservationId:reservationId};};export const resetReservations=()=>{return{type:RESET_RESERVATIONS};};/* ---------------------------------- Thunk Action Creators ---------------------------- */export const getAllUserReservations=userId=>async dispatch=>{try{const response=await csrfFetch(`/api/users/${userId}/reservations`);if(response.ok){const reservations=await response.json();dispatch(loadAllUserReservations(reservations));return reservations;}}catch(e){}};export const getOneReservation=reservationId=>async dispatch=>{const response=await csrfFetch(`/api/reservations/${reservationId}`);if(response.ok){const reservation=await response.json();dispatch(loadOneReservation(reservation));return reservation;}};export const createReservation=(newReservationData,restaurantId)=>async dispatch=>{const response=await csrfFetch(`/api/restaurants/${restaurantId}/reservations`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(newReservationData)});if(response.ok){const newReservation=await response.json();dispatch(addReservation(newReservation));return newReservation;}};export const changeReservation=(updatedReservationData,reservationId)=>async dispatch=>{const response=await csrfFetch(`/api/reservations/${reservationId}`,{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify(updatedReservationData)});if(response.ok){const updatedReservation=await response.json();dispatch(updateReservation(updatedReservation));return updatedReservation;}};export const deleteReservation=reservationId=>async dispatch=>{const response=await csrfFetch(`/api/reservations/${reservationId}`,{method:'DELETE'});if(response.ok){const message=await response.json();dispatch(removeReservation(reservationId));return message;}};/* -------------------------------------- Reducer --------------------------------------- */const initialState={};const reservationsReducer=function(){var _action$reservations$;let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;let action=arguments.length>1?arguments[1]:undefined;let newState={};switch(action.type){case LOAD_ALL_USER_RESERVATIONS:newState={...state};(_action$reservations$=action.reservations.Reservations)===null||_action$reservations$===void 0?void 0:_action$reservations$.forEach(reservation=>{newState[reservation.id]=reservation;});return newState;case LOAD_ONE_RESERVATION:let newReservation={};newReservation[action.reservation.id]=action.reservation;newState={...state,...newReservation};return newState;case ADD_RESERVATION:newState={...state};newState[action.reservation.id]=action.reservation;return newState;case UPDATE_RESERVATION:newState={...state};newState[action.reservation.id]=action.reservation;return newState;case DELETE_RESERVATION:newState={...state};delete newState[action.reservationId];return newState;case RESET_RESERVATIONS:newState={};return newState;default:return state;}};export default reservationsReducer;","map":{"version":3,"names":["csrfFetch","LOAD_ALL_USER_RESERVATIONS","LOAD_ONE_RESERVATION","ADD_RESERVATION","UPDATE_RESERVATION","DELETE_RESERVATION","RESET_RESERVATIONS","loadAllUserReservations","reservations","type","loadOneReservation","reservation","addReservation","updateReservation","removeReservation","reservationId","resetReservations","getAllUserReservations","userId","dispatch","response","ok","json","e","getOneReservation","createReservation","newReservationData","restaurantId","method","headers","body","JSON","stringify","newReservation","changeReservation","updatedReservationData","updatedReservation","deleteReservation","message","initialState","reservationsReducer","_action$reservations$","state","arguments","length","undefined","action","newState","Reservations","forEach","id"],"sources":["/Users/rohan/Desktop/team-project-2024849-sprinters/front-end/src/store/reservations.js"],"sourcesContent":["import { csrfFetch } from \"./csrf\";\n\n\n/* ------------------------------------- Action Types ---------------------------------- */\n\nconst LOAD_ALL_USER_RESERVATIONS = '/reservations/LOAD_ALL_USER_RESERVATIONS'\nconst LOAD_ONE_RESERVATION = '/reservations/LOAD_ONE_RESERVATION'\nconst ADD_RESERVATION = '/reservations/ADD_RESERVATION'\nconst UPDATE_RESERVATION = '/reservations/UPDATE_RESERVATION'\nconst DELETE_RESERVATION = '/reservations/DELETE_RESERVATION'\nconst RESET_RESERVATIONS = '/reservations/RESET_RESERVATIONS'\n\n\n/* ------------------------------------ Action Creators --------------------------------- */\n\nconst loadAllUserReservations = (reservations) => {\n    return {\n        type: LOAD_ALL_USER_RESERVATIONS,\n        reservations: reservations\n    }\n}\n\nconst loadOneReservation = (reservation) => {\n    return {\n        type: LOAD_ONE_RESERVATION,\n        reservation: reservation\n    }\n}\n\nconst addReservation = (reservation) => {\n    return {\n        type: ADD_RESERVATION,\n        reservation: reservation\n    }\n}\n\nconst updateReservation = (reservation) => {\n    return {\n        type: UPDATE_RESERVATION,\n        reservation: reservation\n    }\n}\n\nconst removeReservation = (reservationId) => {\n    return {\n        type: DELETE_RESERVATION,\n        reservationId: reservationId\n    }\n}\n\nexport const resetReservations = () => {\n    return {\n        type: RESET_RESERVATIONS\n    }\n}\n\n\n/* ---------------------------------- Thunk Action Creators ---------------------------- */\n\n\nexport const getAllUserReservations = (userId) => async (dispatch) => {\n    try {\n        const response = await csrfFetch(`/api/users/${userId}/reservations`);\n    \n        if (response.ok) {\n            const reservations = await response.json();\n            dispatch(loadAllUserReservations(reservations));\n            return reservations\n        }\n\n    } catch (e) {\n\n    }\n}\n\nexport const getOneReservation = (reservationId) => async (dispatch) => {\n    const response = await csrfFetch(`/api/reservations/${reservationId}`);\n\n    if (response.ok) {\n        const reservation = await response.json();\n        dispatch(loadOneReservation(reservation));\n        return reservation\n    }\n}\n\nexport const createReservation = (newReservationData, restaurantId) => async (dispatch) => {\n    const response = await csrfFetch(`/api/restaurants/${restaurantId}/reservations`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(newReservationData)\n    })\n\n    if (response.ok) {\n        const newReservation= await response.json();\n        dispatch(addReservation(newReservation));\n        return newReservation;\n    }\n}\n\nexport const changeReservation = (updatedReservationData, reservationId) => async (dispatch) => {\n    const response = await csrfFetch(`/api/reservations/${reservationId}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(updatedReservationData) \n    })\n\n    if (response.ok) {\n        const updatedReservation = await response.json()\n        dispatch(updateReservation(updatedReservation));\n        return updatedReservation\n    }\n}\n\nexport const deleteReservation = (reservationId) => async (dispatch) => {\n    const response = await csrfFetch(`/api/reservations/${reservationId}`, {\n        method: 'DELETE'\n    })\n\n    if (response.ok) {\n        const message = await response.json();\n        dispatch(removeReservation(reservationId));\n        return message;\n    }\n}\n\n\n/* -------------------------------------- Reducer --------------------------------------- */\n\nconst initialState = {};\n\nconst reservationsReducer = (state = initialState, action) => {\n    let newState = {};\n    switch (action.type) {\n        case LOAD_ALL_USER_RESERVATIONS:\n            newState = { ...state }\n            action.reservations.Reservations?.forEach(reservation => {\n                newState[reservation.id] = reservation\n            })\n            return newState;\n\n        case LOAD_ONE_RESERVATION:\n            let newReservation = {};\n            newReservation[action.reservation.id] = action.reservation;\n            newState = { ...state, ...newReservation };\n            return newState;\n\n        case ADD_RESERVATION:\n            newState = { ...state };\n            newState[action.reservation.id] = action.reservation;\n            return newState\n            \n        case UPDATE_RESERVATION:\n            newState = { ...state };\n            newState[action.reservation.id] = action.reservation;\n            return newState\n\n        case DELETE_RESERVATION:\n            newState = { ...state };\n            delete newState[action.reservationId];\n            return newState;\n\n        case RESET_RESERVATIONS:\n            newState = {}\n            return newState;\n\n        default:\n            return state;\n    }\n}\n\n\nexport default reservationsReducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}