{"ast":null,"code":"import { csrfFetch } from \"./csrf\";\n\n/* ----------------------------- Action Types -------------------------- */\n\nconst LOAD_ALL_RESTAURANT_REVIEWS = '/reviews/LOAD_ALL_RESTAURANT_REVIEWS';\nconst LOAD_ALL_USER_REVIEWS = '/reviews/LOAD_ALL_USER_REVIEWS';\nconst ADD_REVIEW = '/reviews/ADD_REVIEW';\nconst UPDATE_REVIEW = '/reviews/UPDATE_REVIEW';\nconst DELETE_REVIEW = '/reviews/DELETE_REVIEW';\nconst RESET_REVIEWS = '/reviews/RESET_REVIEWS';\n\n/* ----------------------------- Action Creators ------------------------ */\n\nconst loadAllRestaurantReviews = reviews => {\n  return {\n    type: LOAD_ALL_RESTAURANT_REVIEWS,\n    reviews: reviews\n  };\n};\nconst loadAllUserReviews = reviews => {\n  return {\n    type: LOAD_ALL_USER_REVIEWS,\n    reviews: reviews\n  };\n};\nconst addReview = review => {\n  return {\n    type: ADD_REVIEW,\n    review: review\n  };\n};\nconst updateReview = review => {\n  return {\n    type: UPDATE_REVIEW,\n    review: review\n  };\n};\nconst removeReview = reviewId => {\n  return {\n    type: DELETE_REVIEW,\n    reviewId: reviewId\n  };\n};\nexport const resetReviews = () => {\n  return {\n    type: RESET_REVIEWS\n  };\n};\n\n/* ---------------------------- Thunk Action Creators ----------------------- */\n\nexport const getAllRestaurantReviews = restaurantId => async dispatch => {\n  try {\n    const response = await csrfFetch(`/api/restaurants/${restaurantId}/reviews`);\n    if (response.ok) {\n      const reviews = await response.json();\n      dispatch(loadAllRestaurantReviews(reviews));\n      return reviews;\n    }\n  } catch (e) {}\n};\nexport const getUserReviews = userId => async dispatch => {\n  try {\n    const response = await csrfFetch(`/api/users/${userId}/reviews`);\n    if (response.ok) {\n      const reviews = await response.json();\n      dispatch(loadAllUserReviews(reviews));\n      return reviews;\n    }\n  } catch (e) {}\n};\nexport const createReview = (reviewData, restaurantId) => async dispatch => {\n  const response = await csrfFetch(`/api/restaurants/${restaurantId}/reviews`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(reviewData)\n  });\n  if (response.ok) {\n    const newReview = await response.json();\n    dispatch(addReview(newReview));\n    return newReview;\n  }\n};\nexport const editReview = (reviewData, reviewId) => async dispatch => {\n  const response = await csrfFetch(`/api/reviews/${reviewId}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(reviewData)\n  });\n  if (response.ok) {\n    const review = await response.json();\n    dispatch(updateReview(review));\n    return review;\n  }\n};\nexport const deleteReview = reviewId => async dispatch => {\n  const response = await csrfFetch(`/api/reviews/${reviewId}`, {\n    method: 'DELETE'\n  });\n  if (response.ok) {\n    const message = await response.json();\n    dispatch(removeReview(reviewId));\n    return message;\n  }\n};\n\n/* -------------------------------- Reducer ------------------------- */\n\nconst initialState = {};\nconst reviewsReducer = (state = initialState, action) => {\n  let newState = {};\n  switch (action.type) {\n    case LOAD_ALL_RESTAURANT_REVIEWS:\n      // newState = { ...state };\n      action.reviews.forEach(review => {\n        newState[review.id] = review;\n      });\n      return newState;\n    case LOAD_ALL_USER_REVIEWS:\n      // newState = { ...state }\n      newState = {};\n      action.reviews.forEach(review => {\n        newState[review.id] = review;\n      });\n      return newState;\n    case ADD_REVIEW:\n      newState = {\n        ...state\n      };\n      newState[action.review.id] = action.review;\n      return newState;\n    case UPDATE_REVIEW:\n      newState = {\n        ...state\n      };\n      newState[action.review.id] = action.review;\n      return newState;\n    case DELETE_REVIEW:\n      newState = {\n        ...state\n      };\n      delete newState[action.reviewId];\n      return newState;\n    case RESET_REVIEWS:\n      newState = {};\n      return newState;\n    default:\n      return state;\n  }\n};\nexport default reviewsReducer;","map":{"version":3,"names":["csrfFetch","LOAD_ALL_RESTAURANT_REVIEWS","LOAD_ALL_USER_REVIEWS","ADD_REVIEW","UPDATE_REVIEW","DELETE_REVIEW","RESET_REVIEWS","loadAllRestaurantReviews","reviews","type","loadAllUserReviews","addReview","review","updateReview","removeReview","reviewId","resetReviews","getAllRestaurantReviews","restaurantId","dispatch","response","ok","json","e","getUserReviews","userId","createReview","reviewData","method","headers","body","JSON","stringify","newReview","editReview","deleteReview","message","initialState","reviewsReducer","state","action","newState","forEach","id"],"sources":["/Users/rohan/Desktop/team-project-2024849-sprinters/front-end/src/store/reviews.js"],"sourcesContent":["import { csrfFetch } from \"./csrf\";\n\n\n/* ----------------------------- Action Types -------------------------- */\n\nconst LOAD_ALL_RESTAURANT_REVIEWS = '/reviews/LOAD_ALL_RESTAURANT_REVIEWS'\nconst LOAD_ALL_USER_REVIEWS = '/reviews/LOAD_ALL_USER_REVIEWS'\nconst ADD_REVIEW = '/reviews/ADD_REVIEW'\nconst UPDATE_REVIEW = '/reviews/UPDATE_REVIEW'\nconst DELETE_REVIEW = '/reviews/DELETE_REVIEW'\nconst RESET_REVIEWS = '/reviews/RESET_REVIEWS'\n\n\n/* ----------------------------- Action Creators ------------------------ */\n\nconst loadAllRestaurantReviews = (reviews) => {\n    return {\n        type: LOAD_ALL_RESTAURANT_REVIEWS,\n        reviews: reviews\n    }\n}\n\nconst loadAllUserReviews = (reviews) => {\n    return {\n        type: LOAD_ALL_USER_REVIEWS,\n        reviews: reviews\n    }\n}\n\nconst addReview = (review) => {\n    return {\n        type: ADD_REVIEW,\n        review: review\n    }\n}\n\nconst updateReview = (review) => {\n    return {\n        type: UPDATE_REVIEW,\n        review: review\n    }\n}\n\nconst removeReview = (reviewId) => {\n    return {\n        type: DELETE_REVIEW,\n        reviewId: reviewId\n    }\n}\n\nexport const resetReviews = () => {\n    return {\n        type: RESET_REVIEWS\n    }\n}\n\n\n/* ---------------------------- Thunk Action Creators ----------------------- */\n\n\nexport const getAllRestaurantReviews = (restaurantId) => async (dispatch) => {\n    try {\n        const response = await csrfFetch(`/api/restaurants/${restaurantId}/reviews`);\n\n        if (response.ok) {\n            const reviews = await response.json();\n            dispatch(loadAllRestaurantReviews(reviews));\n            return reviews;\n        }\n    } catch(e) {\n\n    }\n}\n\nexport const getUserReviews = (userId) => async (dispatch) => {\n    try {\n        const response = await csrfFetch(`/api/users/${userId}/reviews`);\n\n        if (response.ok) {\n            const reviews = await response.json();\n            dispatch(loadAllUserReviews(reviews));\n            return reviews;\n        }\n    } catch(e) {\n\n    }\n}\n\nexport const createReview = (reviewData, restaurantId) => async (dispatch) => {\n    const response = await csrfFetch(`/api/restaurants/${restaurantId}/reviews`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(reviewData)\n    })\n\n    if (response.ok) {\n        const newReview = await response.json();\n        dispatch(addReview(newReview));\n        return newReview;\n    }\n}\n\nexport const editReview = (reviewData, reviewId) => async (dispatch) => {\n    const response = await csrfFetch(`/api/reviews/${reviewId}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(reviewData)\n    })\n\n    if (response.ok) {\n        const review = await response.json();\n        dispatch(updateReview(review));\n        return review;\n    }\n}\n\nexport const deleteReview = (reviewId) => async (dispatch) => {\n    const response = await csrfFetch(`/api/reviews/${reviewId}`, {\n        method: 'DELETE'\n    })\n\n    if (response.ok) {\n        const message = await response.json();\n        dispatch(removeReview(reviewId));\n        return message;\n    }\n}\n\n/* -------------------------------- Reducer ------------------------- */\n\nconst initialState = {};\n\nconst reviewsReducer = (state = initialState, action) => {\n    let newState = {};\n    switch (action.type) {\n        case LOAD_ALL_RESTAURANT_REVIEWS:\n            // newState = { ...state };\n            action.reviews.forEach(review => {\n                newState[review.id] = review\n            })\n            return newState;\n\n        case LOAD_ALL_USER_REVIEWS:\n            // newState = { ...state }\n            newState = {};\n            action.reviews.forEach(review => {\n                newState[review.id] = review\n            })\n            return newState;\n\n        case ADD_REVIEW:\n            newState = { ...state };\n            newState[action.review.id] = action.review;\n            return newState;\n\n        case UPDATE_REVIEW:\n            newState = { ...state };\n            newState[action.review.id] = action.review;\n            return newState;\n\n        case DELETE_REVIEW:\n            newState = { ...state };\n            delete newState[action.reviewId];\n            return newState;\n\n        case RESET_REVIEWS:\n            newState = {};\n            return newState;\n\n        default:\n            return state;\n    }\n}\n\n\nexport default reviewsReducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}