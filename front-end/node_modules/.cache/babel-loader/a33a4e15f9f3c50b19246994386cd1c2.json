{"ast":null,"code":"var _jsxFileName = \"/Users/rohan/Desktop/team-project-2024849-sprinters/front-end/src/components/RestaurantManager/RegisterManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './RegisterManager.css';\nimport logo from '../../icons/BookTable.jpeg';\nimport bgImage from './images/register-bg.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterManager = () => {\n  _s();\n  const history = useHistory();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    contact_number: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const handleChange = e => {\n    setFormData(prev => ({\n      ...prev,\n      [e.target.name]: e.target.value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(null);\n    setSuccess(null);\n    if (formData.password !== formData.confirmPassword) {\n      setError(\"Passwords do not match\");\n      return;\n    }\n    try {\n      const response = await fetch('/api/restaurant-manager/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: formData.name,\n          email: formData.email,\n          contact_number: formData.contact_number,\n          password: formData.password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        setError(data.error || 'Registration failed');\n      } else {\n        setSuccess('Registered successfully! Redirecting...');\n        setTimeout(() => history.push('/restaurant-manager/login'), 1500);\n      }\n    } catch (err) {\n      console.error(err);\n      setError('Server error. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-page\",\n    style: {\n      backgroundImage: `url(${bgImage})`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"BookTable Logo\",\n        className: \"register-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"register-title\",\n        children: \"Register as Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"register-input\",\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Full Name\",\n          value: formData.name,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"register-input\",\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email Address\",\n          value: formData.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"register-input\",\n          type: \"text\",\n          name: \"contact_number\",\n          placeholder: \"Contact Number\",\n          value: formData.contact_number,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"register-input\",\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          value: formData.password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"register-input\",\n          type: \"password\",\n          name: \"confirmPassword\",\n          placeholder: \"Confirm Password\",\n          value: formData.confirmPassword,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"register-button\",\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 31\n        }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"success-message\",\n          children: success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s(RegisterManager, \"G4DI1Cz6v1J9lQ6UCL0PdBHemz0=\", false, function () {\n  return [useHistory];\n});\n_c = RegisterManager;\nexport default RegisterManager;\nvar _c;\n$RefreshReg$(_c, \"RegisterManager\");","map":{"version":3,"names":["React","useState","useHistory","logo","bgImage","jsxDEV","_jsxDEV","RegisterManager","_s","history","formData","setFormData","name","email","contact_number","password","confirmPassword","error","setError","success","setSuccess","handleChange","e","prev","target","value","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","setTimeout","push","err","console","className","style","backgroundImage","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["/Users/rohan/Desktop/team-project-2024849-sprinters/front-end/src/components/RestaurantManager/RegisterManager.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './RegisterManager.css';\nimport logo from '../../icons/BookTable.jpeg';\nimport bgImage from './images/register-bg.png';\n\nconst RegisterManager = () => {\n    const history = useHistory();\n\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        contact_number: '',\n        password: '',\n        confirmPassword: ''\n    });\n\n    const [error, setError] = useState(null);\n    const [success, setSuccess] = useState(null);\n\n    const handleChange = (e) => {\n        setFormData(prev => ({\n            ...prev,\n            [e.target.name]: e.target.value\n        }));\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setError(null);\n        setSuccess(null);\n\n        if (formData.password !== formData.confirmPassword) {\n            setError(\"Passwords do not match\");\n            return;\n        }\n\n        try {\n            const response = await fetch('/api/restaurant-manager/register', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    name: formData.name,\n                    email: formData.email,\n                    contact_number: formData.contact_number,\n                    password: formData.password\n                })\n            });\n\n            const data = await response.json();\n\n            if (!response.ok) {\n                setError(data.error || 'Registration failed');\n            } else {\n                setSuccess('Registered successfully! Redirecting...');\n                setTimeout(() => history.push('/restaurant-manager/login'), 1500);\n            }\n        } catch (err) {\n            console.error(err);\n            setError('Server error. Please try again.');\n        }\n    };\n\n    return (\n        <div className=\"register-page\" style={{ backgroundImage: `url(${bgImage})` }}>\n            <div className=\"register-container\">\n                <img src={logo} alt=\"BookTable Logo\" className=\"register-logo\" />\n                <h2 className=\"register-title\">Register as Manager</h2>\n\n                <form onSubmit={handleSubmit}>\n                    <input className=\"register-input\" type=\"text\" name=\"name\" placeholder=\"Full Name\" value={formData.name} onChange={handleChange} required />\n                    <input className=\"register-input\" type=\"email\" name=\"email\" placeholder=\"Email Address\" value={formData.email} onChange={handleChange} required />\n                    <input className=\"register-input\" type=\"text\" name=\"contact_number\" placeholder=\"Contact Number\" value={formData.contact_number} onChange={handleChange} />\n                    <input className=\"register-input\" type=\"password\" name=\"password\" placeholder=\"Password\" value={formData.password} onChange={handleChange} required />\n                    <input className=\"register-input\" type=\"password\" name=\"confirmPassword\" placeholder=\"Confirm Password\" value={formData.confirmPassword} onChange={handleChange} required />\n                    <button className=\"register-button\" type=\"submit\">Register</button>\n\n                    {error && <div className=\"error-message\">{error}</div>}\n                    {success && <div className=\"success-message\">{success}</div>}\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default RegisterManager;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAO,uBAAuB;AAC9B,OAAOC,IAAI,MAAM,4BAA4B;AAC7C,OAAOC,OAAO,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,OAAO,GAAGP,UAAU,CAAC,CAAC;EAE5B,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC;IACrCW,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,cAAc,EAAE,EAAE;IAClBC,QAAQ,EAAE,EAAE;IACZC,eAAe,EAAE;EACrB,CAAC,CAAC;EAEF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMoB,YAAY,GAAIC,CAAC,IAAK;IACxBX,WAAW,CAACY,IAAI,KAAK;MACjB,GAAGA,IAAI;MACP,CAACD,CAAC,CAACE,MAAM,CAACZ,IAAI,GAAGU,CAAC,CAACE,MAAM,CAACC;IAC9B,CAAC,CAAC,CAAC;EACP,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAC9BA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClBT,QAAQ,CAAC,IAAI,CAAC;IACdE,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAIV,QAAQ,CAACK,QAAQ,KAAKL,QAAQ,CAACM,eAAe,EAAE;MAChDE,QAAQ,CAAC,wBAAwB,CAAC;MAClC;IACJ;IAEA,IAAI;MACA,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBtB,IAAI,EAAEF,QAAQ,CAACE,IAAI;UACnBC,KAAK,EAAEH,QAAQ,CAACG,KAAK;UACrBC,cAAc,EAAEJ,QAAQ,CAACI,cAAc;UACvCC,QAAQ,EAAEL,QAAQ,CAACK;QACvB,CAAC;MACL,CAAC,CAAC;MAEF,MAAMoB,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAElC,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;QACdnB,QAAQ,CAACiB,IAAI,CAAClB,KAAK,IAAI,qBAAqB,CAAC;MACjD,CAAC,MAAM;QACHG,UAAU,CAAC,yCAAyC,CAAC;QACrDkB,UAAU,CAAC,MAAM7B,OAAO,CAAC8B,IAAI,CAAC,2BAA2B,CAAC,EAAE,IAAI,CAAC;MACrE;IACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVC,OAAO,CAACxB,KAAK,CAACuB,GAAG,CAAC;MAClBtB,QAAQ,CAAC,iCAAiC,CAAC;IAC/C;EACJ,CAAC;EAED,oBACIZ,OAAA;IAAKoC,SAAS,EAAC,eAAe;IAACC,KAAK,EAAE;MAAEC,eAAe,EAAE,OAAOxC,OAAO;IAAI,CAAE;IAAAyC,QAAA,eACzEvC,OAAA;MAAKoC,SAAS,EAAC,oBAAoB;MAAAG,QAAA,gBAC/BvC,OAAA;QAAKwC,GAAG,EAAE3C,IAAK;QAAC4C,GAAG,EAAC,gBAAgB;QAACL,SAAS,EAAC;MAAe;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjE7C,OAAA;QAAIoC,SAAS,EAAC,gBAAgB;QAAAG,QAAA,EAAC;MAAmB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEvD7C,OAAA;QAAM8C,QAAQ,EAAE1B,YAAa;QAAAmB,QAAA,gBACzBvC,OAAA;UAAOoC,SAAS,EAAC,gBAAgB;UAACW,IAAI,EAAC,MAAM;UAACzC,IAAI,EAAC,MAAM;UAAC0C,WAAW,EAAC,WAAW;UAAC7B,KAAK,EAAEf,QAAQ,CAACE,IAAK;UAAC2C,QAAQ,EAAElC,YAAa;UAACmC,QAAQ;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC3I7C,OAAA;UAAOoC,SAAS,EAAC,gBAAgB;UAACW,IAAI,EAAC,OAAO;UAACzC,IAAI,EAAC,OAAO;UAAC0C,WAAW,EAAC,eAAe;UAAC7B,KAAK,EAAEf,QAAQ,CAACG,KAAM;UAAC0C,QAAQ,EAAElC,YAAa;UAACmC,QAAQ;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAClJ7C,OAAA;UAAOoC,SAAS,EAAC,gBAAgB;UAACW,IAAI,EAAC,MAAM;UAACzC,IAAI,EAAC,gBAAgB;UAAC0C,WAAW,EAAC,gBAAgB;UAAC7B,KAAK,EAAEf,QAAQ,CAACI,cAAe;UAACyC,QAAQ,EAAElC;QAAa;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC3J7C,OAAA;UAAOoC,SAAS,EAAC,gBAAgB;UAACW,IAAI,EAAC,UAAU;UAACzC,IAAI,EAAC,UAAU;UAAC0C,WAAW,EAAC,UAAU;UAAC7B,KAAK,EAAEf,QAAQ,CAACK,QAAS;UAACwC,QAAQ,EAAElC,YAAa;UAACmC,QAAQ;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACtJ7C,OAAA;UAAOoC,SAAS,EAAC,gBAAgB;UAACW,IAAI,EAAC,UAAU;UAACzC,IAAI,EAAC,iBAAiB;UAAC0C,WAAW,EAAC,kBAAkB;UAAC7B,KAAK,EAAEf,QAAQ,CAACM,eAAgB;UAACuC,QAAQ,EAAElC,YAAa;UAACmC,QAAQ;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC5K7C,OAAA;UAAQoC,SAAS,EAAC,iBAAiB;UAACW,IAAI,EAAC,QAAQ;UAAAR,QAAA,EAAC;QAAQ;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAElElC,KAAK,iBAAIX,OAAA;UAAKoC,SAAS,EAAC,eAAe;UAAAG,QAAA,EAAE5B;QAAK;UAAA+B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EACrDhC,OAAO,iBAAIb,OAAA;UAAKoC,SAAS,EAAC,iBAAiB;UAAAG,QAAA,EAAE1B;QAAO;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAC3C,EAAA,CA7EID,eAAe;EAAA,QACDL,UAAU;AAAA;AAAAuD,EAAA,GADxBlD,eAAe;AA+ErB,eAAeA,eAAe;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}