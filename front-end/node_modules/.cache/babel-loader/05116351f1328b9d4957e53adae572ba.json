{"ast":null,"code":"import { csrfFetch } from \"./csrf\";\n\n/* ------------------------------------- Action Types ---------------------------------- */\n\nconst LOAD_ALL_USER_RESERVATIONS = '/reservations/LOAD_ALL_USER_RESERVATIONS';\nconst LOAD_ONE_RESERVATION = '/reservations/LOAD_ONE_RESERVATION';\nconst ADD_RESERVATION = '/reservations/ADD_RESERVATION';\nconst UPDATE_RESERVATION = '/reservations/UPDATE_RESERVATION';\nconst DELETE_RESERVATION = '/reservations/DELETE_RESERVATION';\nconst RESET_RESERVATIONS = '/reservations/RESET_RESERVATIONS';\n\n/* ------------------------------------ Action Creators --------------------------------- */\n\nconst loadAllUserReservations = reservations => {\n  return {\n    type: LOAD_ALL_USER_RESERVATIONS,\n    reservations: reservations\n  };\n};\nconst loadOneReservation = reservation => {\n  return {\n    type: LOAD_ONE_RESERVATION,\n    reservation: reservation\n  };\n};\nconst addReservation = reservation => {\n  return {\n    type: ADD_RESERVATION,\n    reservation: reservation\n  };\n};\nconst updateReservation = reservation => {\n  return {\n    type: UPDATE_RESERVATION,\n    reservation: reservation\n  };\n};\nconst removeReservation = reservationId => {\n  return {\n    type: DELETE_RESERVATION,\n    reservationId: reservationId\n  };\n};\nexport const resetReservations = () => {\n  return {\n    type: RESET_RESERVATIONS\n  };\n};\n\n/* ---------------------------------- Thunk Action Creators ---------------------------- */\n\nexport const getAllUserReservations = userId => async dispatch => {\n  try {\n    const response = await csrfFetch(`/api/users/${userId}/reservations`);\n    if (response.ok) {\n      const reservations = await response.json();\n      dispatch(loadAllUserReservations(reservations));\n      return reservations;\n    }\n  } catch (e) {}\n};\nexport const getOneReservation = reservationId => async dispatch => {\n  const response = await csrfFetch(`/api/reservations/${reservationId}`);\n  if (response.ok) {\n    const reservation = await response.json();\n    dispatch(loadOneReservation(reservation));\n    return reservation;\n  }\n};\nexport const createReservation = (newReservationData, restaurantId) => async dispatch => {\n  const response = await csrfFetch(`/api/restaurants/${restaurantId}/reservations`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(newReservationData)\n  });\n  if (response.ok) {\n    const newReservation = await response.json();\n    dispatch(addReservation(newReservation));\n    return newReservation;\n  }\n};\nexport const changeReservation = (updatedReservationData, reservationId) => async dispatch => {\n  const response = await csrfFetch(`/api/reservations/${reservationId}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(updatedReservationData)\n  });\n  if (response.ok) {\n    const updatedReservation = await response.json();\n    dispatch(updateReservation(updatedReservation));\n    return updatedReservation;\n  }\n};\nexport const deleteReservation = reservationId => async dispatch => {\n  const response = await csrfFetch(`/api/reservations/${reservationId}`, {\n    method: 'DELETE'\n  });\n  if (response.ok) {\n    const message = await response.json();\n    dispatch(removeReservation(reservationId));\n    return message;\n  }\n};\n\n/* -------------------------------------- Reducer --------------------------------------- */\n\nconst initialState = {};\nconst reservationsReducer = (state = initialState, action) => {\n  var _action$reservations$;\n  let newState = {};\n  switch (action.type) {\n    case LOAD_ALL_USER_RESERVATIONS:\n      newState = {\n        ...state\n      };\n      (_action$reservations$ = action.reservations.Reservations) === null || _action$reservations$ === void 0 ? void 0 : _action$reservations$.forEach(reservation => {\n        newState[reservation.id] = reservation;\n      });\n      return newState;\n    case LOAD_ONE_RESERVATION:\n      let newReservation = {};\n      newReservation[action.reservation.id] = action.reservation;\n      newState = {\n        ...state,\n        ...newReservation\n      };\n      return newState;\n    case ADD_RESERVATION:\n      newState = {\n        ...state\n      };\n      newState[action.reservation.id] = action.reservation;\n      return newState;\n    case UPDATE_RESERVATION:\n      newState = {\n        ...state\n      };\n      newState[action.reservation.id] = action.reservation;\n      return newState;\n    case DELETE_RESERVATION:\n      newState = {\n        ...state\n      };\n      delete newState[action.reservationId];\n      return newState;\n    case RESET_RESERVATIONS:\n      newState = {};\n      return newState;\n    default:\n      return state;\n  }\n};\nexport default reservationsReducer;","map":{"version":3,"names":["csrfFetch","LOAD_ALL_USER_RESERVATIONS","LOAD_ONE_RESERVATION","ADD_RESERVATION","UPDATE_RESERVATION","DELETE_RESERVATION","RESET_RESERVATIONS","loadAllUserReservations","reservations","type","loadOneReservation","reservation","addReservation","updateReservation","removeReservation","reservationId","resetReservations","getAllUserReservations","userId","dispatch","response","ok","json","e","getOneReservation","createReservation","newReservationData","restaurantId","method","headers","body","JSON","stringify","newReservation","changeReservation","updatedReservationData","updatedReservation","deleteReservation","message","initialState","reservationsReducer","state","action","_action$reservations$","newState","Reservations","forEach","id"],"sources":["/Users/rohan/Desktop/team-project-2024849-sprinters/front-end/src/store/reservations.js"],"sourcesContent":["import { csrfFetch } from \"./csrf\";\n\n\n/* ------------------------------------- Action Types ---------------------------------- */\n\nconst LOAD_ALL_USER_RESERVATIONS = '/reservations/LOAD_ALL_USER_RESERVATIONS'\nconst LOAD_ONE_RESERVATION = '/reservations/LOAD_ONE_RESERVATION'\nconst ADD_RESERVATION = '/reservations/ADD_RESERVATION'\nconst UPDATE_RESERVATION = '/reservations/UPDATE_RESERVATION'\nconst DELETE_RESERVATION = '/reservations/DELETE_RESERVATION'\nconst RESET_RESERVATIONS = '/reservations/RESET_RESERVATIONS'\n\n\n/* ------------------------------------ Action Creators --------------------------------- */\n\nconst loadAllUserReservations = (reservations) => {\n    return {\n        type: LOAD_ALL_USER_RESERVATIONS,\n        reservations: reservations\n    }\n}\n\nconst loadOneReservation = (reservation) => {\n    return {\n        type: LOAD_ONE_RESERVATION,\n        reservation: reservation\n    }\n}\n\nconst addReservation = (reservation) => {\n    return {\n        type: ADD_RESERVATION,\n        reservation: reservation\n    }\n}\n\nconst updateReservation = (reservation) => {\n    return {\n        type: UPDATE_RESERVATION,\n        reservation: reservation\n    }\n}\n\nconst removeReservation = (reservationId) => {\n    return {\n        type: DELETE_RESERVATION,\n        reservationId: reservationId\n    }\n}\n\nexport const resetReservations = () => {\n    return {\n        type: RESET_RESERVATIONS\n    }\n}\n\n\n/* ---------------------------------- Thunk Action Creators ---------------------------- */\n\n\nexport const getAllUserReservations = (userId) => async (dispatch) => {\n    try {\n        const response = await csrfFetch(`/api/users/${userId}/reservations`);\n    \n        if (response.ok) {\n            const reservations = await response.json();\n            dispatch(loadAllUserReservations(reservations));\n            return reservations\n        }\n\n    } catch (e) {\n\n    }\n}\n\nexport const getOneReservation = (reservationId) => async (dispatch) => {\n    const response = await csrfFetch(`/api/reservations/${reservationId}`);\n\n    if (response.ok) {\n        const reservation = await response.json();\n        dispatch(loadOneReservation(reservation));\n        return reservation\n    }\n}\n\nexport const createReservation = (newReservationData, restaurantId) => async (dispatch) => {\n    const response = await csrfFetch(`/api/restaurants/${restaurantId}/reservations`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(newReservationData)\n    })\n\n    if (response.ok) {\n        const newReservation= await response.json();\n        dispatch(addReservation(newReservation));\n        return newReservation;\n    }\n}\n\nexport const changeReservation = (updatedReservationData, reservationId) => async (dispatch) => {\n    const response = await csrfFetch(`/api/reservations/${reservationId}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(updatedReservationData) \n    })\n\n    if (response.ok) {\n        const updatedReservation = await response.json()\n        dispatch(updateReservation(updatedReservation));\n        return updatedReservation\n    }\n}\n\nexport const deleteReservation = (reservationId) => async (dispatch) => {\n    const response = await csrfFetch(`/api/reservations/${reservationId}`, {\n        method: 'DELETE'\n    })\n\n    if (response.ok) {\n        const message = await response.json();\n        dispatch(removeReservation(reservationId));\n        return message;\n    }\n}\n\n\n/* -------------------------------------- Reducer --------------------------------------- */\n\nconst initialState = {};\n\nconst reservationsReducer = (state = initialState, action) => {\n    let newState = {};\n    switch (action.type) {\n        case LOAD_ALL_USER_RESERVATIONS:\n            newState = { ...state }\n            action.reservations.Reservations?.forEach(reservation => {\n                newState[reservation.id] = reservation\n            })\n            return newState;\n\n        case LOAD_ONE_RESERVATION:\n            let newReservation = {};\n            newReservation[action.reservation.id] = action.reservation;\n            newState = { ...state, ...newReservation };\n            return newState;\n\n        case ADD_RESERVATION:\n            newState = { ...state };\n            newState[action.reservation.id] = action.reservation;\n            return newState\n            \n        case UPDATE_RESERVATION:\n            newState = { ...state };\n            newState[action.reservation.id] = action.reservation;\n            return newState\n\n        case DELETE_RESERVATION:\n            newState = { ...state };\n            delete newState[action.reservationId];\n            return newState;\n\n        case RESET_RESERVATIONS:\n            newState = {}\n            return newState;\n\n        default:\n            return state;\n    }\n}\n\n\nexport default reservationsReducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}