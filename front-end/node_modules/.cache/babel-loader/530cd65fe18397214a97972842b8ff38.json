{"ast":null,"code":"import{csrfFetch}from\"./csrf\";/* ------------------------------- Action Types --------------------------- */const LOAD_ALL_RESTAURANTS='/restaurants/LOAD_ALL_RESTAURANTS';const LOAD_ONE_RESTAURANT='/restaurants/LOAD_ONE_RESTAURANT';/* ------------------------------ Action Creators -------------------------- */const loadAllRestaurants=restaurants=>{return{type:LOAD_ALL_RESTAURANTS,restaurants:restaurants};};const loadOneRestaurant=restaurant=>{return{type:LOAD_ONE_RESTAURANT,restaurant:restaurant};};/* ---------------------------- Thunk Action Creators ----------------------- */export const getAllRestaurants=()=>async dispatch=>{const response=await csrfFetch('/api/restaurants');if(response.ok){const restaurants=await response.json();dispatch(loadAllRestaurants(restaurants));return restaurants;}};export const getOneRestaurant=restaurantId=>async dispatch=>{const response=await csrfFetch(`/api/restaurants/${restaurantId}`);if(response.ok){const restaurant=await response.json();dispatch(loadOneRestaurant(restaurant));return restaurant;}};/* ---------------------------------- Reducer -------------------------------- */const initialState={};const restaurantsReducer=function(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;let action=arguments.length>1?arguments[1]:undefined;let newState={};switch(action.type){case LOAD_ALL_RESTAURANTS:let newRestaurants={};action.restaurants.Restaurants.forEach(restaurant=>{newRestaurants[restaurant.id]=restaurant;});newState={...state,...newRestaurants};return newState;case LOAD_ONE_RESTAURANT:let newRestaurant={};newRestaurant[action.restaurant.id]=action.restaurant;newState={...state,...newRestaurant};return newState;default:return state;}};export default restaurantsReducer;","map":{"version":3,"names":["csrfFetch","LOAD_ALL_RESTAURANTS","LOAD_ONE_RESTAURANT","loadAllRestaurants","restaurants","type","loadOneRestaurant","restaurant","getAllRestaurants","dispatch","response","ok","json","getOneRestaurant","restaurantId","initialState","restaurantsReducer","state","arguments","length","undefined","action","newState","newRestaurants","Restaurants","forEach","id","newRestaurant"],"sources":["/Users/rohan/Desktop/team-project-2024849-sprinters/front-end/src/store/restaurants.js"],"sourcesContent":["import { csrfFetch } from \"./csrf\";\n\n\n/* ------------------------------- Action Types --------------------------- */\n\nconst LOAD_ALL_RESTAURANTS = '/restaurants/LOAD_ALL_RESTAURANTS'\nconst LOAD_ONE_RESTAURANT = '/restaurants/LOAD_ONE_RESTAURANT'\n\n\n/* ------------------------------ Action Creators -------------------------- */\n\nconst loadAllRestaurants = (restaurants) => {\n    return {\n        type: LOAD_ALL_RESTAURANTS,\n        restaurants: restaurants\n    }\n}\n\nconst loadOneRestaurant = (restaurant) => {\n    return {\n        type: LOAD_ONE_RESTAURANT,\n        restaurant: restaurant\n    }\n}\n\n\n/* ---------------------------- Thunk Action Creators ----------------------- */\n\nexport const getAllRestaurants = () => async (dispatch) => {\n    const response = await csrfFetch('/api/restaurants');\n    \n    if (response.ok) {\n        const restaurants = await response.json();\n        dispatch(loadAllRestaurants(restaurants));\n        return restaurants\n    }\n    \n}\n\nexport const getOneRestaurant = (restaurantId) => async (dispatch) => {\n    const response = await csrfFetch(`/api/restaurants/${restaurantId}`);\n    \n    if (response.ok) {\n        const restaurant = await response.json();\n        dispatch(loadOneRestaurant(restaurant))\n        return restaurant;\n    }\n}\n\n\n/* ---------------------------------- Reducer -------------------------------- */\n\nconst initialState = {};\n\nconst restaurantsReducer = (state = initialState, action) => {\n    let newState = {};\n    switch (action.type) {\n        \n        case LOAD_ALL_RESTAURANTS:\n            let newRestaurants = {};\n            action.restaurants.Restaurants.forEach(restaurant => {\n                newRestaurants[restaurant.id] = restaurant\n            })\n            newState = { ...state, ...newRestaurants };\n            return newState\n            \n            case LOAD_ONE_RESTAURANT:\n                let newRestaurant = {};\n                newRestaurant[action.restaurant.id] = action.restaurant\n                newState = { ...state, ...newRestaurant }\n            return newState\n\n        default:\n            return state;\n    }\n}\n\n\n\nexport default restaurantsReducer"],"mappings":"AAAA,OAASA,SAAS,KAAQ,QAAQ,CAGlC,8EAEA,KAAM,CAAAC,oBAAoB,CAAG,mCAAmC,CAChE,KAAM,CAAAC,mBAAmB,CAAG,kCAAkC,CAG9D,+EAEA,KAAM,CAAAC,kBAAkB,CAAIC,WAAW,EAAK,CACxC,MAAO,CACHC,IAAI,CAAEJ,oBAAoB,CAC1BG,WAAW,CAAEA,WACjB,CAAC,CACL,CAAC,CAED,KAAM,CAAAE,iBAAiB,CAAIC,UAAU,EAAK,CACtC,MAAO,CACHF,IAAI,CAAEH,mBAAmB,CACzBK,UAAU,CAAEA,UAChB,CAAC,CACL,CAAC,CAGD,gFAEA,MAAO,MAAM,CAAAC,iBAAiB,CAAGA,CAAA,GAAM,KAAO,CAAAC,QAAQ,EAAK,CACvD,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAV,SAAS,CAAC,kBAAkB,CAAC,CAEpD,GAAIU,QAAQ,CAACC,EAAE,CAAE,CACb,KAAM,CAAAP,WAAW,CAAG,KAAM,CAAAM,QAAQ,CAACE,IAAI,CAAC,CAAC,CACzCH,QAAQ,CAACN,kBAAkB,CAACC,WAAW,CAAC,CAAC,CACzC,MAAO,CAAAA,WAAW,CACtB,CAEJ,CAAC,CAED,MAAO,MAAM,CAAAS,gBAAgB,CAAIC,YAAY,EAAK,KAAO,CAAAL,QAAQ,EAAK,CAClE,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAV,SAAS,CAAC,oBAAoBc,YAAY,EAAE,CAAC,CAEpE,GAAIJ,QAAQ,CAACC,EAAE,CAAE,CACb,KAAM,CAAAJ,UAAU,CAAG,KAAM,CAAAG,QAAQ,CAACE,IAAI,CAAC,CAAC,CACxCH,QAAQ,CAACH,iBAAiB,CAACC,UAAU,CAAC,CAAC,CACvC,MAAO,CAAAA,UAAU,CACrB,CACJ,CAAC,CAGD,iFAEA,KAAM,CAAAQ,YAAY,CAAG,CAAC,CAAC,CAEvB,KAAM,CAAAC,kBAAkB,CAAG,QAAAA,CAAA,CAAkC,IAAjC,CAAAC,KAAK,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAGH,YAAY,IAAE,CAAAM,MAAM,CAAAH,SAAA,CAAAC,MAAA,GAAAD,SAAA,IAAAE,SAAA,CACpD,GAAI,CAAAE,QAAQ,CAAG,CAAC,CAAC,CACjB,OAAQD,MAAM,CAAChB,IAAI,EAEf,IAAK,CAAAJ,oBAAoB,CACrB,GAAI,CAAAsB,cAAc,CAAG,CAAC,CAAC,CACvBF,MAAM,CAACjB,WAAW,CAACoB,WAAW,CAACC,OAAO,CAAClB,UAAU,EAAI,CACjDgB,cAAc,CAAChB,UAAU,CAACmB,EAAE,CAAC,CAAGnB,UAAU,CAC9C,CAAC,CAAC,CACFe,QAAQ,CAAG,CAAE,GAAGL,KAAK,CAAE,GAAGM,cAAe,CAAC,CAC1C,MAAO,CAAAD,QAAQ,CAEf,IAAK,CAAApB,mBAAmB,CACpB,GAAI,CAAAyB,aAAa,CAAG,CAAC,CAAC,CACtBA,aAAa,CAACN,MAAM,CAACd,UAAU,CAACmB,EAAE,CAAC,CAAGL,MAAM,CAACd,UAAU,CACvDe,QAAQ,CAAG,CAAE,GAAGL,KAAK,CAAE,GAAGU,aAAc,CAAC,CAC7C,MAAO,CAAAL,QAAQ,CAEnB,QACI,MAAO,CAAAL,KAAK,CACpB,CACJ,CAAC,CAID,cAAe,CAAAD,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module"}